<?php
/**
 * @file
 * Code for the Costbenefit module.
 */

/**
 * Implements hook_menu().
 */
function costbenefit_menu() {
  $items = array();
  $items['home'] = array(
    'page callback' => 'costbenefit_home_page',
    'access callback' => TRUE,
    'file' => 'costbenefit.pages.inc',
  );
  $items['cb/%costbenefit'] = array(
    'title callback' => 'costbenefit_get_title',
    'title arguments' => array('view', 1),
    'page callback' => 'costbenefit_view_entity',
    'page arguments' => array(1),
    'access callback' => 'costbenefit_access',
    'access arguments' => array(1),
  );
  $items['cb/%costbenefit/edit'] = array(
    'title callback' => 'costbenefit_get_title',
    'title arguments' => array('edit', 1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('costbenefit_form', 1),
    'access callback' => 'costbenefit_access',
    'access arguments' => array(1),
    'file' => 'costbenefit.forms.inc',
  );
  $items['cb/add'] = array(
    'title' => 'New Cost-Benefit Matrix',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('costbenefit_form', NULL),
    'access callback' => 'user_is_logged_in',
    'file' => 'costbenefit.forms.inc',
  );
  $items['cb/%costbenefit/%/add'] = array(
    'title' => 'Add Item',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('costbenefit_item_add_form', 1, 2),
    'access callback' => 'costbenefit_access',
    'access arguments' => array(1),
    'file' => 'costbenefit.forms.inc',
  );
  $items['cb/%costbenefit/%costbenefit_item'] = array(
    'title callback' => 'costbenefit_get_title',
    'title arguments' => array('view' , 2),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('costbenefit_item_edit_form', 2),
    'access callback' => 'costbenefit_access',
    'access arguments' => array(1),
    'file' => 'costbenefit.forms.inc',
  );
  $items['cb/%costbenefit/%costbenefit_item/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('costbenefit_item_delete_form', 2),
    'access callback' => 'costbenefit_access',
    'access arguments' => array(1),
    'file' => 'costbenefit.forms.inc',
  );
  return $items;
}

/**
 * Implements hook_entity_info().
 */
function costbenefit_entity_info() {
  $info = array();
  $info['costbenefit'] = array(
    'label' => t('Cost-Benefit'),
    'base table' => 'costbenefit',
    'entity keys' => array(
      'id' => 'cb_id',
      'label' => 'title',
    ),
    'entity class' => 'CostbenefitEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'CostbenefitEntityController',
    'module' => 'costbenefit',
  );
  $info['costbenefit_item'] = array(
    'label' => t('Cost-Benefit Item'),
    'base table' => 'costbenefit_item',
    'entity keys' => array(
      'id' => 'cb_item_id',
      'label' => 'title',
    ),
    'entity class' => 'CostbenefitItemEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'CostbenefitItemEntityController',
    'module' => 'costbenefit',
  );
  return $info;
}

/**
 * Menu autoloader for /costbenefit.
 */
function costbenefit_load($cb_id) {
  $entity = entity_load('costbenefit', array($cb_id));
  return array_pop($entity);
}

/**
 * Menu autoloader for /costbenefit_item.
 */
function costbenefit_item_load($cb_item_id) {
  $entity = entity_load('costbenefit_item', array($cb_item_id));
  return array_pop($entity);
}

/**
 * Implements hook_theme().
 */
function costbenefit_theme($existing, $type, $theme, $path) {
  return array(
    'costbenefit_box' => array(
      'template' => 'costbenefit-box',
      'path' => drupal_get_path('module', 'costbenefit') . '/theme',
      'variables' => array(
        'vars' => NULL,
      ),
    ),
  );
}

/**
 * Process variables for entity.tpl.php.
 *
 * @see template_preprocess_entity in Entity API module.
 */
function costbenefit_preprocess_entity(&$variables) {
  if ($variables['elements']['#entity_type'] == 'costbenefit' && $variables['view_mode'] == 'full') {
    // Enables costbenefit.tpl.php naming suggestion.
    $variables['theme_hook_suggestions'][] = 'costbenefit';
    $entity = $variables['elements']['#entity'];
  }
}

/**
 * Page callback for /costbenefit/ID.
 */
function costbenefit_view_entity($entity) {
  return entity_view('costbenefit', array($entity->cb_id => $entity), 'full');
}

/**
 * Title callback for /costbenefit/ID.
 */
function costbenefit_get_title($op, $entity) {
  if ($op == 'view') {
    return $entity->title;
  }
  return $op . ' ' . $entity->title;
}

/**
 * Access callback for costbenefit and costbenefit_item pages.
 */
function costbenefit_access($entity) {
  global $user;
  if ($user->uid == 1) {
    return TRUE;
  }
  dsm($entity->uid);
  //print '</pre>' . print_r($entity) . '</pre>';
  //@todo: Fix bug: Notice: Trying to get property of non-object.
  return $user->uid == $entity->uid;
}

/**
 * ------------------------------------------------------------
 * HELPERS
 * ------------------------------------------------------------
 */

/**
 * Returns the costbenefit box label based on given number $box.
 */
function _costbenefit_get_box_label($box) {
  $type = _costbenefit_get_box_type($box, FALSE);
  $action = 'using';
  if ($box > 2) {
    $action = 'not using';
  }
  return $type . ' of ' . $action;
}

function _costbenefit_get_box_type($box, $plural = TRUE) {
  $type = 'Advantage';
  // If box number is even:
  if ($box % 2 == 0) {
    $type = 'Disadvantage';
  }
  if ($plural) {
    $type .= 's';
  }
  return $type;
}

/**
 * Returns array of values to set the costbenefit_item type.
 */
function _costbenefit_get_type_options() {
  return array(
    0 => 'Short term',
    1 => 'Long term',
  );
}
