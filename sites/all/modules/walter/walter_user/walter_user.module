<?php
/**
 * @file
 * Code for the walter_user module.
 */

/**
 * Implements hook_menu().
 */
function walter_user_menu() {
  $items = array();
  $items['cb'] = array(
    'page callback' => 'walter_user_front_page',
    'access callback' => TRUE,
    'file' => 'walter_user.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function walter_user_theme($existing, $type, $theme, $path) {
  return array(
    'walter_front_page' => array(
      'template' => 'walter-front-page',
      'path' => drupal_get_path('module', 'walter_user') . '/theme',
      'variables' => array(
        'register_form' => NULL,
        'login_form' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function walter_user_form_alter(&$form, $form_state, $form_id) {
  global $user;
  $account = $user;
  // Globally change E-mail to Email.
  $form['account']['mail']['#title'] = t('Email');
  $email_help = t("Email will never be publicly displayed.");
  switch ($form_id) {
    case 'user_profile_form':
      drupal_set_title(t("Settings"));
      $form['account']['mail']['#description'] = $email_help;
      unset($form['timezone']);
      if (module_exists('contact')) {
        unset($form['contact']);
      }
      break;
    case 'user_login_block':
    case 'user_login':
      // Direct user to the front page (overrides Drupal default of /user)
      $form_state['redirect'] = 'cb';
      // Overwrite links to get rid of default markup.
      unset($form['links']);
      $form['actions']['submit']['#value'] = t('Sign in');
      $form['actions']['submit']['#attributes']['class'][] = 'btn-primary';
      break;
    case 'user_register_form':
      $form['account']['mail']['#description'] = $email_help;;
      // Removes password-confirmation field.
      $form['account']['pass']['#type'] = 'password';
      $form['account']['pass']['#title'] = 'Password';
      $form['account']['pass']['#description'] = 'Create a password.';
      $form['actions']['submit']['#value'] = t('Get started');
      $form['actions']['submit']['#attributes']['class'][] = 'btn-primary';
      $form['actions']['submit']['#prefix'] = '<p class="text-right">';
      $form['actions']['submit']['#suffix'] = '</p>';
      $form['title'] = array(
        '#prefix' => '<hr />',
        '#type' => 'textfield',
        '#title' => t("The activity or substance is:"),
        '#required' => TRUE,
        '#weight' => 100,
      );
      $form['#submit'][] = 'walter_user_new_user';
      break;
    case 'user_pass':
      $form['#submit'][] = 'walter_user_form_redirect';
      break;
  }
}

function walter_user_form_redirect($form, &$form_state){
  $form_state['redirect'] = 'cb';
}

/**
 * Implements hook_menu_alter().
 */
function walter_user_menu_alter(&$items) {
  unset($items['user']);
  unset($items['user/register']);
}

/**
 * Additional callback for user register form.
 *
 * Creates a costbenefit based on the value entered on the form.
 */
function walter_user_new_user($form, &$form_state) {
  global $user;
  $title = $form_state['values']['title'];
  $entity = entity_create('costbenefit', array(
    'title' => $title,
  ));
  $entity->save();
  // Redirect to the newly created costbenefit.
  drupal_goto('cb/' . $entity->cb_id);
}

/**
 * Implements hook_email_registration_name().
 *
 * Hook defined by email_registration module.
 */
function walter_user_email_registration_name($edit, $account) {
  // Sets username as email.
  return $account->mail;
}

/**
 * Helper function to return global $user's first name.
 */
function walter_user_get_first_name($account = NULL) {
  if (!$account) {
    global $user;
    $account = $user;
  }
  $account = user_load($account->uid);
  if (isset($account->field_first_name[LANGUAGE_NONE][0]['value'])) {
    return $account->field_first_name[LANGUAGE_NONE][0]['value'];
  }
  // Return email as default if no first name is set.
  return $account->mail;
}

function walter_user_get_api_user($account = NULL) {
  if (!$account) {
    global $user;
    $account = $user;
  }
  $account = user_load($account->uid);
  $return = new StdClass();
  $return->uid = $account->uid;
  $return->email = $account->mail;
  $return->first_name = walter_user_get_first_name($account);
  $return->created = $account->created;
  $return->last_login = $account->login;
  return $return;
}
